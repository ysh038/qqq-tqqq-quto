/**
 * RSI (Relative Strength Index) Í≥ÑÏÇ∞
 * @param {number[]} prices - Í∞ÄÍ≤© Î∞∞Ïó¥
 * @param {number} period - Í≥ÑÏÇ∞ Í∏∞Í∞Ñ (Í∏∞Î≥∏ 14Ïùº)
 * @returns {number} RSI Í∞í (0-100)
 */
export const calculateRSI = (prices, period = 14) => {
    if (prices.length < period + 1) return 50 // Í∏∞Î≥∏Í∞í

    let gains = 0
    let losses = 0

    // Ï≤´ Î≤àÏß∏ Í∏∞Í∞ÑÏùò ÌèâÍ∑† Í≥ÑÏÇ∞
    for (let i = 1; i <= period; i++) {
        const change = prices[i] - prices[i - 1]
        if (change > 0) gains += change
        else losses -= change
    }

    let avgGain = gains / period
    let avgLoss = losses / period

    // ÎÇòÎ®∏ÏßÄ Í∏∞Í∞ÑÏùò RSI Í≥ÑÏÇ∞
    for (let i = period + 1; i < prices.length; i++) {
        const change = prices[i] - prices[i - 1]
        const gain = change > 0 ? change : 0
        const loss = change < 0 ? -change : 0

        avgGain = (avgGain * (period - 1) + gain) / period
        avgLoss = (avgLoss * (period - 1) + loss) / period
    }

    if (avgLoss === 0) return 100
    const rs = avgGain / avgLoss
    return 100 - (100 / (1 + rs))
}

/**
 * SMA (Simple Moving Average) Í≥ÑÏÇ∞
 * @param {number[]} prices - Í∞ÄÍ≤© Î∞∞Ïó¥
 * @param {number} period - Í≥ÑÏÇ∞ Í∏∞Í∞Ñ
 * @returns {number} SMA Í∞í
 */
export const calculateSMA = (prices, period) => {
    if (prices.length < period) return prices[prices.length - 1] || 0
    
    const recentPrices = prices.slice(-period)
    const sum = recentPrices.reduce((a, b) => a + b, 0)
    return sum / period
}

/**
 * EMA (Exponential Moving Average) Í≥ÑÏÇ∞
 * @param {number[]} prices - Í∞ÄÍ≤© Î∞∞Ïó¥
 * @param {number} period - Í≥ÑÏÇ∞ Í∏∞Í∞Ñ
 * @returns {number} EMA Í∞í
 */
export const calculateEMA = (prices, period) => {
    if (prices.length < period) return prices[prices.length - 1] || 0
    
    const multiplier = 2 / (period + 1)
    let ema = prices.slice(0, period).reduce((a, b) => a + b, 0) / period
    
    for (let i = period; i < prices.length; i++) {
        ema = (prices[i] * multiplier) + (ema * (1 - multiplier))
    }
    
    return ema
}

/**
 * Ìä∏Î†àÏù¥Îî© Ïã†Ìò∏ ÏÉùÏÑ± (Î≥¥ÏàòÏ†Å Ï†ÑÎûµ)
 * @param {Object} stockData - Ï£ºÏãù Îç∞Ïù¥ÌÑ∞
 * @returns {Object} Ìä∏Î†àÏù¥Îî© Ïã†Ìò∏
 */
export const generateTradingSignal = (stockData) => {
    const { rsi, sma20, sma50, price } = stockData

    // üî¥ Í∑πÎèÑ Í≥ºÏó¥ - ÏôÑÏ†Ñ Î∞©Ïñ¥ Î™®Îìú (RSI > 75)
    if (rsi > 75 && price > sma20 * 1.05) {
        return {
            signal: 'SELL',
            reason: `Í∑πÎèÑ Í≥ºÏó¥ (RSI: ${rsi.toFixed(1)}) - ÏôÑÏ†Ñ Î∞©Ïñ¥ Î™®Îìú`,
            tqqqRatio: 5,
            qqqRatio: 70,
        }
    }

    // üü† Í∞ïÌïú ÏÉÅÏäπ - Î≥¥ÏàòÏ†Å Ï†ëÍ∑º (RSI > 65)
    if (rsi > 65 && price > sma20) {
        return {
            signal: 'SELL',
            reason: `ÏÉÅÏäπ Í≥ºÏó¥ (RSI: ${rsi.toFixed(1)}) - Î≥¥ÏàòÏ†Å Ï†ëÍ∑º`,
            tqqqRatio: 10,
            qqqRatio: 65,
        }
    }

    // üü° ÏïΩÌïú ÏÉÅÏäπ - ÌòÑÏÉÅ Ïú†ÏßÄ (RSI > 55)
    if (rsi > 55 && price > sma20) {
        return {
            signal: 'HOLD',
            reason: `ÏïΩÌïú ÏÉÅÏäπÏÑ∏ - ÌòÑÏÉÅ Ïú†ÏßÄ (RSI: ${rsi.toFixed(1)})`,
            tqqqRatio: 15,
            qqqRatio: 60,
        }
    }

    // üîµ Ï§ëÎ¶Ω Íµ¨Í∞Ñ - Í∑†Ìòï Ïú†ÏßÄ (RSI 45-55)
    if (rsi >= 45 && rsi <= 55) {
        return {
            signal: 'HOLD',
            reason: `Ï§ëÎ¶Ω Íµ¨Í∞Ñ - Í∑†Ìòï Ïú†ÏßÄ (RSI: ${rsi.toFixed(1)})`,
            tqqqRatio: 20,
            qqqRatio: 55,
        }
    }

    // üü¢ ÏïΩÌïú ÌïòÎùΩ - Ï°∞Ïã¨Ïä§Îü∞ ÏßÑÏûÖ (RSI 35-45)
    if (rsi >= 35 && rsi < 45 && price > sma50) {
        return {
            signal: 'BUY',
            reason: `ÏïΩÌïú ÌïòÎùΩ - Ï°∞Ïã¨Ïä§Îü∞ ÏßÑÏûÖ (RSI: ${rsi.toFixed(1)})`,
            tqqqRatio: 25,
            qqqRatio: 50,
        }
    }

    // üü¢ Ï§ëÍ∞Ñ ÌïòÎùΩ - Î∂ÑÌï† Îß§Ïàò (RSI 25-35)
    if (rsi >= 25 && rsi < 35) {
        return {
            signal: 'BUY',
            reason: `Ï§ëÍ∞Ñ ÌïòÎùΩ - Î∂ÑÌï† Îß§Ïàò ÏãúÏ†ê (RSI: ${rsi.toFixed(1)})`,
            tqqqRatio: 30,
            qqqRatio: 45,
        }
    }

    // üü¢ Í∑πÎèÑ Í≥ºÎß§ÎèÑ - Ï†ÅÍ∑π Îß§Ïàò (RSI < 25)
    if (rsi < 25 && price < sma50) {
        return {
            signal: 'BUY',
            reason: `Í∑πÎèÑ Í≥ºÎß§ÎèÑ (RSI: ${rsi.toFixed(1)}) - Ï†ÅÍ∑π Îß§Ïàò Í∏∞Ìöå`,
            tqqqRatio: 35,
            qqqRatio: 40,
        }
    }

    // Í∏∞Î≥∏Í∞í (ÏòàÏô∏ ÏÉÅÌô©)
    return {
        signal: 'HOLD',
        reason: `ÌòÑÏû¨ ÏÉÅÌÉú Ïú†ÏßÄ (RSI: ${rsi.toFixed(1)}, Í∞ÄÍ≤©: $${price.toFixed(2)})`,
        tqqqRatio: 20,
        qqqRatio: 55,
    }
} 